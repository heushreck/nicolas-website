[{"id": "manage-multiple-ssh-keys", "title": "Manage Multiple SSH Key for GitHub on One Machine", "image": "https://i.postimg.cc/JhRrBBsG/manage-multiple-ssh-keys.webp", "tags": ["SSH", "GitHub", "ssh-key", "ssh-config"], "shortDescription": "Learn how to seamlessly manage multiple GitHub accounts on a single machine using distinct SSH keys, from key generation to repository configuration.", "text": "<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">GitHub allows developers to collaborate in teams on projects and maintain version control over our code. Like many others, I work at a company, but also develop my own projects on the side. This means I have a personal GitHub account, a GitHub account from the company, and recently, a third account from a client where I also contribute to the repository. Managing multiple SSH keys on one machine has always been a bit cumbersome, but in this tutorial, I'll explain how I seamlessly switch from one GitHub account to the next and be able to commit and push in different repositories.</p>\n<h2 class=\"font-bold\" id=\"solution\" style=\"font-size: 2rem;\">Solution</h2>\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">The solution is to define <strong>host aliases</strong> in the SSH config file (each alias for an account) and have seperate directories for each github account.</p>\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">This is how:</p>\n<ol class=\"max-w-lg space-y-4 list-decimal list-inside  px-4 text-gray-500\" style=\"list-style: decimal;\">\n<li><a class=\"font-medium text-blue-600 hover:underline\" href=\"https://help.github.com/articles/generating-a-new-ssh-key/\">Generate SSH key pairs for accounts</a> and <a class=\"font-medium text-blue-600 hover:underline\" href=\"https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/\">add them to GitHub accounts</a>.</li>\n<li><p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">Edit/Create SSH config file (<code class=\"text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">~/.ssh/config</code>):</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\"><span class=\"hljs-comment\"># Default GitHub account: personal</span>\n<span class=\"hljs-attribute\">Host</span> github.com\n   HostName github.com\n   IdentityFile ~/.ssh/id_personal\n   IdentitiesOnly <span class=\"hljs-literal\">yes</span>\n\n<span class=\"hljs-comment\"># Work GitHub account: work</span>\nHost github-work\n   HostName github.com\n   IdentityFile ~/.ssh/id_work\n   IdentitiesOnly <span class=\"hljs-literal\">yes</span>\n</code></pre>\n</div>\n</div>\n\n<blockquote class=\"p-2 my-3\">\n<p class=\"text-justify italic font-medium leading-relaxed\" style=\"font-style: italic;\">NOTE: If you use any account frequently, you should use the default hostname (github.com).</p>\n</blockquote>\n</li>\n<li><p class=\"mb-3 text-justify\" style=\"color: #4B5563;\"><a class=\"font-medium text-blue-600 hover:underline\" href=\"https://help.github.com/articles/adding-a-new-ssh-key-to-the-ssh-agent/\">Add SSH private keys to your agent</a>:</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">ssh-<span class=\"hljs-keyword\">add</span><span class=\"bash\"> ~/.ssh/id_personal\n</span>ssh-<span class=\"hljs-keyword\">add</span><span class=\"bash\"> ~/.ssh/id_work</span>\n</code></pre>\n</div>\n</div>\n\n</li>\n</ol>\n<h2 class=\"font-bold\" id=\"test-your-connection-\" style=\"font-size: 2rem;\">Test your connection:</h2>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">ssh-keyscan github.com <span class=\"hljs-meta\">&gt;&gt; </span>~<span class=\"hljs-regexp\">/.ssh/known</span>_hosts\nssh -T git@github.com\nssh -T git@github-work\n</code></pre>\n</div>\n</div>\n\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">If everything is OK, you will see these messages:</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-plaintext text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">Hi personal! Yo<span class=\"hljs-string\">u've successfully authenticated, but GitHub does not provide shell access.\n\nHi work! You'</span>ve successfully authenticated, but GitHub does <span class=\"hljs-keyword\">not</span> provide shell access.\n</code></pre>\n</div>\n</div>\n\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">Now all are set, you need to remember:</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">git@github-work:org/project.git &gt; <span class=\"hljs-keyword\">user</span> <span class=\"hljs-title\">is</span> work\ngit@github.com:org/project.git  &gt; <span class=\"hljs-keyword\">user</span> <span class=\"hljs-title\">is</span> personal\n</code></pre>\n</div>\n</div>\n\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">If you need to clone a repository, just do:</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">git clone git@github-work:org1/project1<span class=\"hljs-selector-class\">.git</span> /path/to/project1\ncd /path/to/project1\ngit config user<span class=\"hljs-selector-class\">.email</span> <span class=\"hljs-string\">\"email@example.com\"</span>\ngit config user<span class=\"hljs-selector-class\">.name</span>  <span class=\"hljs-string\">\"FirstName LastName\"</span>\n</code></pre>\n</div>\n</div>\n\n<h2 class=\"font-bold\" id=\"migrate-repository\" style=\"font-size: 2rem;\">Migrate repository</h2>\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">If you already have the repo set up, after the SSH config instructions, you need to change the URL of <code class=\"text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">origin</code>, just do:</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\"><span class=\"hljs-string\">cd </span>/<span class=\"hljs-string\">path/</span><span class=\"hljs-string\">to/</span><span class=\"hljs-string\">project2\n</span><span class=\"hljs-string\">git </span><span class=\"hljs-string\">remote </span><span class=\"hljs-built_in\">set-url</span> <span class=\"hljs-string\">origin </span><span class=\"hljs-string\">git@</span><span class=\"hljs-string\">github-work:org2/</span><span class=\"hljs-string\">project2.</span><span class=\"hljs-string\">git\n</span><span class=\"hljs-string\">git </span><span class=\"hljs-string\">config </span><span class=\"hljs-string\">user.</span><span class=\"hljs-string\">email </span><span class=\"hljs-string\">\"email@example.com\"</span>\n<span class=\"hljs-string\">git </span><span class=\"hljs-string\">config </span><span class=\"hljs-string\">user.</span><span class=\"hljs-string\">name </span> <span class=\"hljs-string\">\"FirstName LastName\"</span>\n</code></pre>\n</div>\n</div>\n\n<h2 class=\"font-bold\" id=\"set-up-git-configuration\" style=\"font-size: 2rem;\">Set up Git Configuration</h2>\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">to avoid the constant need to manually configure your git email and name like this:</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">git config user<span class=\"hljs-selector-class\">.email</span> <span class=\"hljs-string\">\"email@example.com\"</span>\ngit config user<span class=\"hljs-selector-class\">.name</span>  <span class=\"hljs-string\">\"FirstName LastName\"</span>\n</code></pre>\n</div>\n</div>\n\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">You can create mutilple Git Config files:</p>\n<ol class=\"max-w-lg space-y-4 list-decimal list-inside  px-4 text-gray-500\" style=\"list-style: decimal;\">\n<li><p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">Edit your <code class=\"text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">~/.gitconfig</code> file</p>\n\n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">[user]\n <span class=\"hljs-attr\">email</span> = email@personal.com\n <span class=\"hljs-attr\">name</span> = FirstName LastName\n[includeIf <span class=\"hljs-string\">\"gitdir:~/work_repositories/\"</span>]\n   <span class=\"hljs-attr\">path</span> = ~/work_repositories/.gitconfig\n</code></pre>\n</div>\n</div>\n\n</li>\n<li>Create and edit a second Git Config file for your work account (<code class=\"text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">~/work_repositories/.gitconfig</code>): \n<div class=\"mb-2 relative bg-gray-50 rounded-lg\" style=\"margin-top:10px;\">\n<div class=\"overflow-auto max-h-full\">\n<pre style=\"background-color: rgb(249 250 251);\"><code class=\"language-bash text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">[user]\n <span class=\"hljs-section\">email</span> = <span class=\"hljs-section\">email</span>@work.com\n name = FirstName LastName\n</code></pre>\n</div>\n</div>\n\n</li>\n</ol>\n<p class=\"mb-3 text-justify\" style=\"color: #4B5563;\">Everytime you are in the <code class=\"text-sm text-gray-500 whitespace-pre\" style=\"color: #4B5563;\">~/work_repositories/</code> directory, your work email will be used when you commit and push code.</p>\n", "date": "03.22.2024"}]